* Html body of the game 
we will have 3 buttons and when the player clicks on a button, a round is played or playRound should be called with the correct playerSelection

#+BEGIN_SRC html :tangle index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Rock Paper Scizzors game</title>
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">

  </head>
  <body>
  <div>
  This is a simple Rock Paper Scizzors Game 
  </div>
  <button data-type = "rock" class="rock game btn">
  Rock
  </button>
  
  <button  data-type = "paper" class="paper game btn">
  Paper
  </button>

  <button  data-type = "scizzor" class="scizzor game btn">
  Scizzor
  </button>
  <div class='score'> </div>
	<script src="script.js" defer></script>
  </body>
</html>
#+END_SRC 

* JS of the game 
** computer choice
   this is a function to get computer choice 
   it creates a random object between 1 and 3 and assigns 1 to rock, 2 to paper and 3 to scizzors
   #+BEGIN_SRC  javascript  :tangle script.js

 function getComputerChoice(){
     let computerChoice = Math.floor(Math.random() * (4-1) + 1);
     if (computerChoice == 1){computerChoice = 'rock'}
     else if (computerChoice == 2){computerChoice = 'paper'}
     else {computerChoice = 'scizzor'};
     return computerChoice;
 } 
   #+END_SRC

** playing the game 
   it takes two parameters - playerSelection and computerSelection 
   first we convert the player given string to lower case
   then we get a computerSelection by running the getComputerchoice function

   the last part is to compare both 
   now there are three possibilities
*** Decision table 
    |-----------------+-------------------+---------------------|
    | playerselection | computerselection | result (for player) |
    |-----------------+-------------------+---------------------|
    | rock            | rock              | tie                 |
    |                 | paper             | loss                |
    |                 | scizzor           | win                 |
    |-----------------+-------------------+---------------------|
    | paper           | rock              | win                 |
    |                 | paper             | tie                 |
    |                 | scizzor           | loss                |
    |-----------------+-------------------+---------------------|
    | scizzor         | rock              | loss                |
    |                 | paper             | win                 |
    |                 | scizzor           | tie                 |
    |-----------------+-------------------+---------------------|

*** playRound Function
    This function logs who won and returns the result of the round in form of 1, -1 or 0;

    #+BEGIN_SRC  javascript  :tangle script.js
    function playRound(playerSelection, ComputerSelection){
	playerSelection = playerSelection.toLowerCase();  // converting the player string to lower case
	let computerSelection = getComputerChoice();
    //    console.log("player " + playerSelection + " computer " + computerSelection); //this is here for debugging 

	if ( (playerSelection == 'rock' && computerSelection == "scizzor")
	     ||  (playerSelection == 'paper' && computerSelection== "rock") ||
	     (playerSelection == 'scizzor' && computerSelection =="paper")
	   ) {console.log( `You win! ${playerSelection} beats ${computerSelection}`);return 1;}


	else if (
	    (playerSelection == "rock" && computerSelection == "paper")
		||  (playerSelection == "paper" && computerSelection== "scizzor") ||
		(playerSelection == "scizzor" && computerSelection =="rock")
	) {console.log( `you lose! ${computerSelection} beats ${playerSelection}`); return -1;}

	else {
	    console.log( `it's a tie, you chose ${playerSelection} and the computer chose ${computerSelection} `);return 0;}
    }

    #+END_SRC

** Round Control 
   This is a function that lets us play the game 5 times, it also keeps score and delcares the winner at the end

   Requirements
   - make the playe play 5 rounds
   - at the end of each round, take input in the form of prompt
   - keep score
     How to keep the score?
   We can make a separate function that can track player wins and player losses and ties 
   if player wins then we can return that as 1, if player loses then we can return that as -1 and it it's a tie, we can return 0 

   - declare winner at the end 

*** function to play 5 rounds

    for round 1 to 5 
    get computer choice
    get input from player
    log the winner or loser
    store the result of each round and keep the score
    display the result at the end 
    end 
    #+BEGIN_SRC  javascript  :tangle script.js

    let score = document.querySelector('.score'); 
       let playerScore=0;
       let computerScore=0;
let currentPlayerSelection = '';
      function play5Rounds(playerSelection){

// console.log(playerSelection);


       let computerSelection = getComputerChoice();

	   let scoreOfThisRound = playRound(currentPlayerSelection, computerSelection);

	   if (scoreOfThisRound == 1){playerScore++;}
	   else if (scoreOfThisRound==-1){computerScore++;}
	   else{}
	   console.log(`playerScore = ${playerScore} and computerScore = ${computerScore}`);   
	    score.innerHTML = `<p>player's Score = ${playerScore} and computer's Score = ${computerScore}</p>`
	  
	}   

/*
       for (let i = 0; i < 5; i++){
	   console.log(`Round ${i+1}`);
	   computerSelection = getComputerChoice();
//	   playerSelection = prompt("enter rock,paper or scizzor");

	   let scoreOfThisRound = playRound(playerSelection, computerSelection);

	   if (scoreOfThisRound == 1){playerScore++;}
	   else if (scoreOfThisRound==-1){computerScore++;}
	   else{}
	   console.log(`playerScore = ${playerScore} and computerScore = ${computerScore}`);   

       }
       whoWon(playerScore, computerScore);
   }
  */ 
    #+END_SRC



**** Function WhoWon
     This function compares the player scores and the computer scores and tells who wins at the end 
     #+BEGIN_SRC  javascript  :tangle script.js
  function whoWon(playerScore,computerScore){
       if(playerScore>computerScore) {console.log("player Wins!!");}
	else if(playerScore<computerScore) {console.log("computer Wins");}
	else {console.log("its a tie");}
  }
     #+END_SRC


 
** attaching event listeners to buttons


 #+BEGIN_SRC  javascript  :tangle script.js

const buttons = document.querySelectorAll('.game');//selecting all the buttons
const rock = document.querySelector('.rock');//attaching all the event listgenteris
const paper = document.querySelector('.paper');
const scizzor = document.querySelector('.scizzor');


let round = 0;
rock.addEventListener('click',function(){
runGame();

if(round==5){
round = 0;
console.log("reset");
whoWon(playerScore,computerScore);

	
	playerScore=0;
	computerScore=0;
	console.log(`player score is resetted to ${playerScore} and computer score is reset to ${computerScore}`);
	    score.innerHTML = `<p>player's Score = ${playerScore} and computer's Score = ${computerScore}</p>`
};
});

paper.addEventListener('click',function(){
runGame();

if(round==5){
round = 0;
console.log("reset");
whoWon(playerScore,computerScore);

	
	playerScore=0;
	computerScore=0;
	console.log(`player score is resetted to ${playerScore} and computer score is reset to ${computerScore}`);
	    score.innerHTML = `<p>player's Score = ${playerScore} and computer's Score = ${computerScore}</p>`
};
});
scizzor.addEventListener('click',function(){
runGame();

if(round==5){
round = 0;
console.log("reset");
whoWon(playerScore,computerScore);

	
	playerScore=0;
	computerScore=0;
	console.log(`player score is resetted to ${playerScore} and computer score is reset to ${computerScore}`);
	    score.innerHTML = `<p>player's Score = ${playerScore} and computer's Score = ${computerScore}</p>`
};
});



function runGame(){
currentPlayerSelection = event.target.innerHTML.trim().toLowerCase();
round++;
console.log("round: "+ round);
play5Rounds(currentPlayerSelection);
return round;
};
 #+END_SRC

** Here's the code if you want to auto tangle on save



#+BEGIN_SRC elisp
 Local Variables: 
 eval: (add-hook 'after-save-hook (lambda ()(if (y-or-n-p "Tangle?")(org-babel-tangle))) nil t) 
 End:
#+END_SRC
